{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3B326FeB7c219Cc9BE12F2e112c83D45DcB14331",
    "txHash": "0x9f6a1390262bf8f3548667e605cc2942590bcfdec3374caf8864877ced8bdfc4"
  },
  "proxies": [
    {
      "address": "0x0fa260027c328840bE39E4fCF19FCaC4BF29394D",
      "txHash": "0xd49b17968a01d61ee37c5194a6f7942cf810cf8effb768c6ee44a5e161a9c435",
      "kind": "transparent"
    }
  ],
  "impls": {
    "79b357d309012edf43e0270e25fb99c321a42086ef9b2b27d3c96112849961a7": {
      "address": "0x5ea8EE79368116FE841eb57c678b583CCF4F5141",
      "txHash": "0x9d1d0ade8450ad5a931234d27c86c2280f43e1b5e0fa2b5ea5c3d3a6c8c3f196",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:14"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:15"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:17"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:18"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2551_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:20"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2551_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:21"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2558_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "digest",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2551_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2551_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2551_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "evidence",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2558_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2558_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2558_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
