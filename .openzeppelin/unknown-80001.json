{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x23a9837C687B5867C19420fA9942cc02000e270f",
    "txHash": "0x2472c73a879a8c40898002f022d39aebb4c70500c1f6dc8d5abe40ac4be010ac"
  },
  "proxies": [
    {
      "address": "0x1ab4F75f22425FF21Da5497E3b74dC17da64E958",
      "txHash": "0x8bbe0ce7856c5958f856108b26cbf702a71beec3bba6e3f78be8c33bb9721ffd",
      "kind": "transparent"
    },
    {
      "address": "0xaBadF778F7Cd1cEff786E0b30708692376AB689e",
      "txHash": "0xc1440348a02b7cc0263d20e061f13d4f929d8c6f3438a2b09582f1eed49fdc39",
      "kind": "transparent"
    },
    {
      "address": "0x763898ceB29c1B50B69BFF68BF01F1759a5F7192",
      "txHash": "0x097d16cdc3f47fb9e1691d1a612ece7d0cef814cf6b455d98420ce190e085d26",
      "kind": "transparent"
    },
    {
      "address": "0x4e8595f9f1eDC0B3b27b9793Ed0c95c2f9B66D61",
      "txHash": "0xadf1eba5343546284b38ef55ccf611a01587b743eb34aac9ab432fc31ac03447",
      "kind": "transparent"
    },
    {
      "address": "0x05eCa93793E615A9f62ACf441928E9fA77b40C37",
      "txHash": "0xda7d319fdc7b4893f4839b889008b505c26fe17815caf931cfdfbb0b184965b8",
      "kind": "transparent"
    },
    {
      "address": "0xf6b82A69F0069ab188c5C05b0fDf9e98d7F5479f",
      "txHash": "0x135c8289d0b23bfd2ae24b11e45f20037f123fae2fef1c340dd2afd65ff615d2",
      "kind": "transparent"
    },
    {
      "address": "0xcc83DcBC4532A9E2bB84a8c7904AFe265166f64c",
      "txHash": "0x550916d38d7ea86a0958b0747a4aea60cae759c79b7a40b9904e512efde05f17",
      "kind": "transparent"
    },
    {
      "address": "0x41Be8ed36014d041C43bD3C017e479d77D8F46c2",
      "txHash": "0x5bbd5f148993bb5e338000572b3260bb094635c4bd03014b18f793d4969ddc5b",
      "kind": "transparent"
    },
    {
      "address": "0x31dc2090CB90DBfCDEB30e7c29Efb6282fcEBC2f",
      "txHash": "0x4a45773e695c3d4d010c8870b2541ad25b9f164ea6265f8f1e796a761456c638",
      "kind": "transparent"
    },
    {
      "address": "0x69A03D4b51De8B133fb2E6C82dEDEd6C6bA58912",
      "txHash": "0x0c99cd2a78c7b5f71fb2dd1e71338432be8f90f39cfb80112aac71c6a21689ae",
      "kind": "transparent"
    },
    {
      "address": "0x7F4dc7f0541936B773E5a76B3edc0F70040F615A",
      "txHash": "0x7db9b9b9855a504abf5dab00972b392e2a0849e319a24e4714ec2a09b7b472fe",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4fd90a84e5d6731975d34838a827f758354ff80d330cba85f9c2cb18643ca3c3": {
      "address": "0x07771bF50aE694551453F2650Ba6935adAE8E3BA",
      "txHash": "0xa0d4429b51ef276dbc12359a329eaf5df3897ab2fc478aa2e8ab0b6e703c4711",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2538_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2547_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2547_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2554_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2538_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2538_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2547_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2547_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2547_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2554_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2554_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2554_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "725d7e1b38f575f4985b8f86db148a62cb6219df5a835b8031f63df4c2d62a67": {
      "address": "0x3570db1ACAE4f41e5FCB335f4C632E5f22125581",
      "txHash": "0x0924bfbc1041ea22cb2979f0e292541ab345b2d368f88ed2ae875e6c4064ac32",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2538_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2547_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2547_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2554_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2538_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2538_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2547_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2547_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2547_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2554_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2554_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2554_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0c411a71e3a485ca94c3f2f440488a99e0dce444be24eeb7e88a6773be5bb543": {
      "address": "0x333f0040FFeb5d45ab7C2f5d80887De23be0ab9f",
      "txHash": "0x49de98b167625eb800bd2064c6fff96e675cc213809da34ae915e0d3dbfa732e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f79baafdc0502f4734ca81d3b2d94028a2d51834bd669d9cc2b2834efc516e26": {
      "address": "0x0867E6C777DcCcb89576D23a6425834F3022aF66",
      "txHash": "0xb0d706b7e0fbfc2e97031a3fc9854cda18b945976f1c71c34716741a86ec107a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "44309cd6bca0ba5952e3bf83d2b32ecfb8976303ec5df7b26093108eccff88c1": {
      "address": "0x3e8b06F30133D95445c19d93acbd61e84a9e3Cd5",
      "txHash": "0x160fdfc833d46d2454f66981db96cd09b985fd13337f2af79fef78fe7a277901",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c0e9e4a0b7a15fcbe694ff9e36e408135b8825f7c5ed0dd8da28de223e6fcd8c": {
      "address": "0x6b3b40691ecE9Ea553317775275e18d8904cc57C",
      "txHash": "0x74b8ef8cdd459566bcacf5f260b1540b2425a71eeb4f7aa39de77ca1bb982b97",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e21d3b6f6af7f0fef216a56e40fcc6532eec684d860d258bd4564a9f45bc0da": {
      "address": "0x5e5580BbF30c47ec90d9A877F4e6D5E24998c7de",
      "txHash": "0x0016f4194c9bb53a13bba5f0d85871569870bcabf09c71c96fd24c1daa885a59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d32e4262ea9578268fa7c746f3ae4d2b9968721f99a413bcb61a4e26b3d4a102": {
      "address": "0x1A173994f7FdC2502d35E0A0996133a23951801c",
      "txHash": "0x9042d34067b7704571ef4a1e83f5454b18f6d898818bf53145c1854924b15260",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "66ffd97fcc64cce9e24fd3f05b95e2da1cc3cf887139a0f90a7484d3d87f3939": {
      "address": "0xDa31aC2a924D1e21FE8B52e3054a3a93Fa77815e",
      "txHash": "0xf7a94bf02a7a6b53bbea9a2fba8d292a060be40f5d6679940aa5152df3044d76",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4e65b67b1eb9e98bdb6220775072ae53bfbe593e16305f5ec7735d8c0eb7f25d": {
      "address": "0x7046125dDdB4a0852B66e0fbbCa3Bb54cDFeBFF8",
      "txHash": "0xa1b7448a57b4fc692a4582139667a1971d53a8104d57e69c7b965e191b79268f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)199_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:26"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "MOEToken",
            "label": "onnanocos",
            "type": "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)",
            "src": "../project:/contracts/MOEToken.sol:26"
          },
          {
            "contract": "MOEToken",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2540_storage)",
            "src": "../project:/contracts/MOEToken.sol:27"
          },
          {
            "contract": "MOEToken",
            "label": "totalRounds",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:29"
          },
          {
            "contract": "MOEToken",
            "label": "totalOnnanocos",
            "type": "t_uint256",
            "src": "../project:/contracts/MOEToken.sol:30"
          },
          {
            "contract": "MOEToken",
            "label": "defenseVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:32"
          },
          {
            "contract": "MOEToken",
            "label": "attackVotes",
            "type": "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:33"
          },
          {
            "contract": "MOEToken",
            "label": "stakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)",
            "src": "../project:/contracts/MOEToken.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Onnanoco)2529_storage)": {
            "label": "mapping(uint256 => struct Lib.Onnanoco)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Onnanoco)2529_storage": {
            "label": "struct Lib.Onnanoco",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "multihash",
                "type": "t_struct(Multihash)2512_storage"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2505"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalStakingAmount",
                "type": "t_uint256"
              },
              {
                "label": "roundId",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Multihash)2512_storage": {
            "label": "struct Lib.Multihash",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32"
              },
              {
                "label": "hashFunction",
                "type": "t_bytes2"
              },
              {
                "label": "size",
                "type": "t_uint8"
              }
            ]
          },
          "t_enum(Status)2505": {
            "label": "enum Lib.Status",
            "members": [
              "NORMAL",
              "IN_DISPUTE",
              "DEPRECATED"
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bytes2": {
            "label": "bytes2"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_struct(Round)2540_storage)": {
            "label": "mapping(uint256 => struct Lib.Round)"
          },
          "t_struct(Round)2540_storage": {
            "label": "struct Lib.Round",
            "members": [
              {
                "label": "onnanocoId",
                "type": "t_uint256"
              },
              {
                "label": "totalDefenseAmount",
                "type": "t_uint256"
              },
              {
                "label": "totalAttackAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "totalVotes",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_array(t_struct(Vote)2549_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Lib.Vote[])"
          },
          "t_array(t_struct(Vote)2549_storage)dyn_storage": {
            "label": "struct Lib.Vote[]"
          },
          "t_struct(Vote)2549_storage": {
            "label": "struct Lib.Vote",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "voter",
                "type": "t_address"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Stake)2556_storage)dyn_storage)": {
            "label": "mapping(address => struct Lib.Stake[])"
          },
          "t_array(t_struct(Stake)2556_storage)dyn_storage": {
            "label": "struct Lib.Stake[]"
          },
          "t_struct(Stake)2556_storage": {
            "label": "struct Lib.Stake",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2202_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_struct(AddressSet)2202_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1901_storage"
              }
            ]
          },
          "t_struct(Set)1901_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)199_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)199_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
